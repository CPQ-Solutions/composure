(function() {
br_utils.create_plugin ({	
'name':'br_bm_login_page',
'author':'Aaron Hall',
'description':'Create transaction with user info on login to track sangfroid usage',
regex_urls: ['.com/commerce/display_company_profile.jsp','/admin/index.jsp'],
/**
 * @param {DOM} doc The document object of the page that we are testing against
 * @return {Object} params A hashmap intended to hold information for identifying the page,
 */
'get_parameters':function(doc, jQuery) {
	var params = {};
	
	params.loginform = jQuery("form[name='loginform']", doc);
	params.url = doc.location.href;
  
	return params;
},
/**
 * @param {Object} params A hashmap, usually generated by get_parameters
 * @return {Boolean} True if this plugin should be used on this page
 */
'matches_page':function(params) {
	//return ((params.loginform||{}).length > 0);
	return true;
},
'content': br_bm_login_page,
});
/**
 * @param {Object} params A hash map of information about the page
 * @extends BR_Content
 */
function br_bm_login_page(params) {
	var me = this;
	var jQuery = this.jQuery, doc = this.doc;
	/**
	 * content and elements on page
	 */
	this.get_script_type = function() {return "br_bm_login_page";};
	//this.get_script = function() {return this.search_nodes_for_script() || EMPTY_SCRIPT_STRING;};
	/**
	 * File naming and directories -
	 * 
	 * These functions are called whenever the plugin 
	 * is making a decision about where to save a file
	 */
	this.get_filename = function() { 
		return "";
		//return get_id(); 
	};
	this.get_extension = function() { return ""; };
	this.get_local_directory = function() { return ""; };
	/**
	 * Entry points - 
	 * These functions are called by the firefox plugin directly
	 */

	this.plugin_created_successfully = function() {
		return false;
	}
	this.on_page_unload = function() {};
	this.on_page_load = function() {};

	this.initiate_display = function() {
		var url = params['url']||"";
		var is_prod = br_utils.is_prod_site(url);
		var level = "";
		if(is_prod){
			level = "prod";
		}
		var backwards_bm_button = "<table id='sangfroid_login_button' class='plain-button' cellspacing='0' cellpadding='0'> <tr> <td class='button-left'><img class='button-left' src='/img/button10.gif' /></td> <td class='button-middle' nowrap='true'><div style='margin:0px 0px 1px 0px;'> <a class='button-text' name='sangfroid_login' id='sangfroid_login' href='#'>Proxy Into Superuser</a></div></td><td class='button-right'><img class='button-right' src='/img/button10.gif'/></td> </tr> </table>";		
		if(br_utils.urlParam('service') == "true"){
			me.do_proxy_login();
		}
		
		if((params.loginform||{}).length > 0){
			//jQuery("input[name='username']",doc).change(function(){
					br_log.page(backwards_bm_button,level,function(){
						jQuery("#sangfroid_login_button",doc).click(function(){
							if(jQuery("input[name='username']",doc).val().toLowerCase().indexOf("bigmachines.com")>-1){
								jQuery("#redirectUrl",doc).val("/admin/index.jsp?service=true");
								jQuery("#log_in",doc).click();
							}else{
								br_log.error("Requires Service Login");
							}
						});
					});
			//});
			
			jQuery("#log_in",doc).click(function(){
				var user_name = jQuery("input[name='username']",doc).val();
				var api_url = "";
				if(br_global.debug){
					api_url = "https://apex.oraclecorp.com/pls/apex/matthewpetrik/sangfroid_login_audit";
				}else{
					api_url = "https://apex.oraclecorp.com/pls/apex/cpq_sangfroid/sangfroid_login_audit";
				}
				var this_url = me.get_hostname_prefix();
				var version = br_global.sangfroid_version;
				jQuery.post(api_url,{username:user_name,sitename:this_url,version:version});
			});
			jQuery(doc).keypress(function(e){
				if(e.keyCode == 13){
					jQuery("#log_in",doc).click();
				}
			});
		}
	};
	/*
	function do_proxy_login() {
		var root = me.get_hostname_prefix();
		var defer = Q.defer(), promise = defer.promise;
		//AH - deprecated call from SFDC days
		//check_version(defer);
		br_log.notify("Searching for Proxy User...");
		jQuery.get(root+"/internaladmin/index.jsp","",function(data){
			var testData = jQuery("<div/>",doc).append(data);
			var link = jQuery("td:contains('FullAccessWithESales')",testData).next().next().children().attr("href");

			if(!link) {
				br_log.error("Unable to proxy in - are you logged in using a service login? (Info: " + root+link + ")");
				return;
			}

			br_log.notify("Proxy User found, Logging in as Superuser...");
			//AH - originally waited for SFDC promise
			//promise.then(
			//	function(xx){
					jQuery.get(root+link,function(){
						openUILink(root+"admin/index.jsp?sangfroid=awesome");
					});
			//	}
			//);		
		});
	}*/
}
br_bm_login_page.prototype = new BR_Content();
}());
