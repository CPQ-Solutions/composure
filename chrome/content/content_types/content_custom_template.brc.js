br_utils.create_plugin ({	
'name':'content_custom_template',
'author':'Kris Zemlyak	',
'description':'Version Control Custom Template HTML in Config',
/**
 * @param {DOM} doc The document object of the page that we are testing against
 * @return {Object} params A hashmap intended to hold information for identifying the page,
 */
regex_urls: ['admin/configuration/rules/flows/edit_template.jsp'],
'get_parameters':function(doc, jQuery) {
	var params = {};
	
	params.action_name = jQuery("td.bottom-bar:first", doc).html();
	params.template_id = jQuery("input[name='template_id']", doc).attr("value");
	params.field_id = jQuery("input[name='field']", doc).attr("value");
	
	return params;
},
/**
 * @param {Object} params A hashmap, usually generated by get_parameters
 * @return {Boolean} True if this plugin should be used on this page
 */
'matches_page':function(params) {
	var cond1 = (params['field_id']||"").indexOf('wizard_html_template') > -1;

	return (cond1);
},
'content': content_custom_template,
});
/**
 * @param {Object} params A hash map of information about the page
 * @extends BR_Content
 */
function content_custom_template(params) {
		var jQuery = this.jQuery, doc = this.doc;
	/**
	 * content and elements on page
	 */
	
	this.get_script_type = function() {return "content_custom_template";};
	//this.get_script = function() {return this.search_nodes_for_script() || EMPTY_SCRIPT_STRING;};
	/**
	 * File naming and directories -
	 * 
	 * These functions are called whenever the plugin 
	 * is making a decision about where to save a file
	 */
	this.get_filename = function() {
		var f = "CustomTemplate-"+params.action_name;
		f += '.' + params['template_id'];

		f=f.replace(/&nbsp;/g,"");
		f = this.filename_sanitize(f);
		f = f.replace(/_/g,"");
		return f;
	};
	this.get_extension = function() {return ".html";};
	this.get_local_directory = function() {
		var d = params.action_name+"\\";
		d=d.replace(/&nbsp;/g,"");
		d = this.directory_sanitize(d);
		d = d.replace(/_/g,"");
		return d;
	};
	
	/**
	 * Entry points - 
	 * These functions are called by the firefox plugin directly
	 */
	//this.on_launch_and_save = function() {	}
	//this.on_page_load = function() { this.initiate_display(); };
	//this.read_from_file = function() {  };
	//this.faster = function();
	/**
	 * actions
	 */
	//this.initiate_display = function() {br_display.create_display_pane()};
	//this.save_script_to_disk = function() {  };
	//this.open_script_in_editor = function() {  };
};
content_custom_template.prototype = new BR_Content();
