br_utils.create_plugin({
	'name' : 'Commerce',
	'author' : 'Michael Wheeler',
	'description' : 'Run when commerce.js runs in the framework',
	regex_urls : ['/commerce/'],
	/**
	 * @param {DOM} doc The document object of the page that we are testing against
	 * @return {Object} params A hashmap intended to hold information for identifying the page,
	 */
	'get_parameters' : function (doc, jQuery) {
		var params = {};

		params.url = doc.location.href;
		//params.title = jQuery("title", doc).html();

		return params;
	},
	/**
	 * @param {Object} params A hashmap, usually generated by get_parameters
	 * @return {Boolean} True if this plugin should be used on this page
	 */
	'matches_page' : function (p) {
		//from bm-framework.js
		doc_form_exists = jQuery("form[name='bmDocForm']",doc).length > 0;
		if(doc_form_exists) {
			return parseInt(jQuery("input[name='_document_number']",doc).val()) > 1;
		}
		return false;
	},
	'content' : line_document,
});
/**
 * @param {Object} params A hash map of information about the page
 * @extends BR_Content
 */
function line_document(params) {
	var jQuery = this.jQuery,
	doc = this.doc;
	var that = this;
	/**
	 * content and elements on page
	 */

	this.get_script_type = function () {
		return "line_document";
	};
	//this.get_script = function() {return this.search_nodes_for_script() || EMPTY_SCRIPT_STRING;};
	/**
	 * File naming and directories -
	 *
	 * These functions are called whenever the plugin
	 * is making a decision about where to save a file
	 */
	this.get_filename = function () {};
	this.get_extension = function () {};
	this.get_local_directory = function () {};
	/**
	 * Entry points -
	 * These functions are called by the firefox plugin directly
	 */
	//this.on_launch_and_save = function() {	}
	//this.on_page_load = function() { this.initiate_display(); };
	//this.read_from_file = function() {  };
	this.faster = function () {};
	/**
	 * actions
	 */
	var pm = Components.classes["@mozilla.org/preferences-service;1"]
		.getService(Components.interfaces.nsIPrefService)
		.getBranch("extensions.sangfroid.");
	var attributePref = pm.getBoolPref("open_attribute");
	var actionPref = pm.getCharPref("open_action");
	var inline_hide = function (element, delay) {
		jQuery(element)
		.delay(delay)
		.animate({
			"font-size" : "0px"
		}, 0, "linear", function () {
			jQuery(this).css({
				"display" : "none",
				"font-size" : ".8em"
			});
		});
	};

	var add_action_links = function () {
		if (actionPref !== "disable") {
			jQuery(".button-text", doc).each(function () {
				var table = jQuery(this).closest("table");
				var tablex = table.get(0);
				var tableClass = tablex.className;
				var table2 = jQuery(tablex).clone().get(0);
				var el = doc.createElement("p");

				el.appendChild(table2);
				var html = el.innerHTML;
				//	_parent.appendChild(table);
				var start = html.indexOf('(') + 1;
				var end = html.indexOf(')');
				html = html.substring(start, end);

				var arg = html.split(",");
				if (arg.length === 3) {
					var _id = jQuery.trim(arg[2]);
					var str = "<a id='link" + _id + "'class='br_tiny' target='#'  href='/admin/commerce/actions/edit_action.jsp?id=" + _id + "'><img src='resource://br_images/admin.png' /></a>";
					jQuery(tablex).before(str);
					if (actionPref === "hover") {
						jQuery(tablex).hover(function () {
							jQuery("a[id='link" + _id + "']", doc).css({
								"display" : "inline"
							});
						}, function () {
							inline_hide(jQuery("a[id='link" + _id + "']", doc), 2000);
						});
					} else if (actionPref === "display") {
						jQuery("a[id='link" + _id + "']", doc).removeClass("br_tiny");
					}
				} else if (arg.length === 2) {
					var _id = jQuery.trim(arg[0]);
					if(_id.startsWith("'change_history")){
						var n = _id.lastIndexOf('=');
						_id = _id.substring(n + 1,_id.length-1);
					}
					var str = "<a id='link" + _id + "'class='br_tiny' target='#'  href='/admin/commerce/actions/edit_action.jsp?id=" + _id + "'><img src='resource://br_images/admin.png' /></a>";
					jQuery(tablex).before(str);
					if (actionPref === "hover") {
						jQuery(tablex).hover(function () {
							jQuery("a[id='link" + _id + "']", doc).css({
								"display" : "inline"
							});
						}, function () {
							inline_hide(jQuery("a[id='link" + _id + "']", doc), 2000);
						});
					} else if (actionPref === "display") {
						jQuery("a[id='link" + _id + "']", doc).removeClass("br_tiny");
					}
				} else if (tableClass.indexOf("esig-action") > -1) {
					var actionIdValue = table.next().val();
					var actionIds = actionIdValue.split('-');
					var _id = jQuery.trim(actionIds[0]);
					var str = "<a id='link" + _id + "'class='br_tiny' target='#'  href='/admin/commerce/actions/edit_action.jsp?id=" + _id + "'><img src='resource://br_images/admin.png' /></a>";
					jQuery(tablex).before(str);
					if (actionPref === "hover") {
						jQuery(tablex).hover(function () {
							jQuery("a[id='link" + _id + "']", doc).css({
								"display" : "inline"
							});
						}, function () {
							inline_hide(jQuery("a[id='link" + _id + "']", doc), 2000);
						});
					} else if (actionPref === "display") {
						jQuery("a[id='link" + _id + "']", doc).removeClass("br_tiny");
					}
				}
				el = null;
				//br_display.displayMessage(html);
			});
		}
		//MX open commerce attributes on quote
		function get_hostname_prefix() {
			var url = doc.location.href;
			var end = url.indexOf(".com") + 5;
			url = url.substring(0, end);
			return url;
		}
		function findlink(documentid, varname) {
			var root = get_hostname_prefix();
			jQuery.get(root + "/admin/commerce/attributes/list_commerce_attributes.jsp?document_id=" + documentid, "", function (data) {
				br_utils.loadLock();
				var testData = jQuery("<div/>", doc).append(data);
				jQuery(".bgcolor-list-odd td:nth-child(4),.bgcolor-list-even td:nth-child(4)", testData).each(function () {
					if (jQuery(this).text() === varname) {
						var link = jQuery(this).prev().children().attr("href");
						gBrowser.selectedTab = gBrowser.addTab(root + link);
					}
				});
			});
		}
		function appendlink(attrwrapper, varname, str, style) {
			style = style || {};
			var $container = jQuery("<div/>");
			jQuery(attrwrapper).append($container);
			$str = $container.append(str);
			$container.css(style);
			jQuery(attrwrapper).hover(function () {
				var $help = jQuery(this).children(".help-icon").detach();
				$help.css("position","relative");
				var $gear = jQuery("a[id='link" + varname + "']", doc);
				$help.appendTo($container);
				$gear.css({
					"display" : "inline"
				});
			}, function () {
				var $gear = jQuery("a[id='link" + varname + "']", doc);
				var $help = $container.children(".help-icon");
				$gear.css({
					"display" : "none"
				});
				$help.css("position","");
				$help.detach();
				$help.appendTo(this);
			});
		}
		function open_att_set(documentid, attSetType, varname) {
			var root = get_hostname_prefix();
			jQuery.get(root + "/admin/commerce/attributes/list_commerce_attributes.jsp?document_id=" + documentid, "", function (data) {
				var testData = jQuery("<div/>", doc).append(data);
				var link = jQuery("td:contains('" + attSetType + "')", testData).prev().prev().children().attr("href");
				jQuery.get(root + link, "", function (data) {
					var testData1 = jQuery("<div/>", doc).append(data);
					jQuery(".bgcolor-list-odd td:nth-child(1) a,.bgcolor-list-even td:nth-child(1) a", testData1).each(function () {
						var eachAttLink = jQuery(this).attr("href");
						var variable = "";
						jQuery.get(root + eachAttLink, "", function (data) {
							var testData2 = jQuery("<div/>", doc).append(data);
							variable = jQuery("td:contains('Variable Name:')", testData2).next().text();
							if (variable === varname) {
								br_utils.loadLock();
								gBrowser.selectedTab = gBrowser.addTab(root + eachAttLink);
							}
						});
					});
				});
			});
		}
		function open_multi_att_sets_attribute(attSetType, varname, documentid) {
			var root = get_hostname_prefix();
			jQuery.get(root + "/admin/commerce/attributes/list_commerce_attributes.jsp?document_id=" + documentid, "", function (data) {
				var testData = jQuery("<div/>", doc).append(data);
				jQuery("td:contains('" + attSetType + "')", testData).each(function () {
					var eachArrSetLink = jQuery(this).prev().prev().children().attr("href");
					jQuery.get(root + eachArrSetLink, "", function (data) {
						var testData1 = jQuery("<div/>", doc).append(data);
						jQuery(".bgcolor-list-odd td:nth-child(1) a,.bgcolor-list-even td:nth-child(1) a", testData1).each(function () {
							var eachAttLink = jQuery(this).attr("href");
							var variable = "";
							jQuery.get(root + eachAttLink, "", function (data) {
								var testData2 = jQuery("<div/>", doc).append(data);
								variable = jQuery("td:contains('Variable Name:')", testData2).next().text();
								if (variable === varname) {
									br_utils.loadLock();
									gBrowser.selectedTab = gBrowser.addTab(root + eachAttLink);
								}
							});
						});
					});
				});
			});
		}
		function open_line_att_set_attribute(linevarname, documentid) {
			var attSet = linevarname.substring(0, 5);
			var attSetType = "";
			switch (attSet) {
			case '_pric':
				attSetType = "Price Attribute Set";
				break;
			case '_part':
				attSetType = "Part Attribute Set";
				break;
			case '_mode':
				attSetType = "Model Attribute Set";
				break;
			case '_conf':
				attSetType = "Config Attribute Set";
				break;
			case '_seri':
				attSetType = "Serial Number Attribute Set";
				break;
			case '_segm':
				attSetType = "Segment Attribute Set";
				break;
			case '_prod':
				attSetType = "Product Line Attribute Set";
				break;
			default:
				findlink(documentid, linevarname);
				break;
			}
			if (attSetType !== "") {
				open_att_set(documentid, attSetType, linevarname);
			}
		}
		if (attributePref) {
			jQuery("[id*='attr_wrapper']", doc).each(function () {
				var attrwrapper = jQuery(this);
				var docvarname = jQuery(this).attr('id').substring(13);
				var idx = docvarname.indexOf('_');
				var varname = docvarname.substring(idx + 1);
				var documentno = jQuery("input[name='document_number']", doc).val();
				/*quote level and line level attributes*/
				if (attrwrapper.closest("table").attr('id') !== "line-item-grid") {
					var documentid = jQuery("input[name='document_id']", doc).val();
					var str = "<a id='link" + varname + "' class='br_tiny' style='cursor: pointer;'><img src='resource://br_images/admin.png'/></a>";
					appendlink(attrwrapper, varname, str, {"left":"0px","top":"0px","position":"absolute"});
					jQuery("#link" + varname, doc).click(function () {
						br_utils.loadLock();
						var attSetType = "";
						if (varname.indexOf("approval_status_") !== 0 && varname.indexOf("approval_history_") !== 0 && varname.indexOf("approval_revision_") !== 0 && varname.indexOf("approve_reject_icon_") !== 0 && varname !== "version_number_version_quote" && varname !== "parent_transaction_id_version_quote" && (varname.indexOf("_") !== 0 || varname === "_customer_id" || varname === "_transaction_total")) {
							findlink(documentid, varname);
						} else if (varname.indexOf("_") === 0 && documentno > 1) {
							open_line_att_set_attribute(varname, documentid);
						} else if (varname == "version_number_version_quote" || varname == "parent_transaction_id_version_quote") {
							attSetType = "Version Attribute Set";
							open_att_set(documentid, attSetType, varname);
						} else if (varname.indexOf("_bill_to_") === 0 || varname.indexOf("_bill_to_") === 0) {
							attSetType = "Bill To/Ship To Address Set";
							open_att_set(documentid, attSetType, varname);
						} else if (varname.indexOf("_cc_") === 0) {
							attSetType = "Credit Card Attribute Set";
							open_att_set(documentid, attSetType, varname);
						} else if (varname.indexOf("_price_book_") === 0 || varname == "_partner_price_book_id") {
							attSetType = "Price Book Attribute Set";
							open_att_set(documentid, attSetType, varname);
						} else if (varname.indexOf("_") === 0 && (varname.indexOf("_first_name") > -1) || (varname.indexOf("_last_name") > -1) || (varname.indexOf("_company_name") > -1) || (varname.indexOf("_company_name_2") > -1) || (varname.indexOf("_address") > -1) || (varname.indexOf("_address_2") > -1) || (varname.indexOf("_city") > -1) || (varname.indexOf("_state") > -1) || (varname.indexOf("_zip") > -1) || (varname.indexOf("_country") > -1) || (varname.indexOf("_phone") > -1) || (varname.indexOf("_fax") > -1) || (varname.indexOf("_email") > -1)) {
							attSetType = "Additional Address Set";
							open_multi_att_sets_attribute(attSetType, varname, documentid);
						} else if (varname.indexOf("_") === 0 && varname.indexOf("_esig_") > -1) {
							attSetType = "eSignature Set";
							/*not available on desktop layout*/
						} else {
							var root = get_hostname_prefix();
							jQuery.get(root + "/admin/commerce/actions/list_actions.jsp?doc_id=" + documentid, "", function (data) {
								var testData = jQuery("<div/>", doc).append(data);
								jQuery("td", testData).each(function () {
									if (jQuery(this).text() === "Submit") {
										var submitVar = jQuery(this).prev().text();
										if (varname === "approval_status_" + submitVar || varname === "approval_history_" + submitVar || varname === "approval_revision_" + submitVar || varname === "approve_reject_icon_" + submitVar) {
											attSetType = "Submit Attribute Set";
											open_multi_att_sets_attribute(attSetType, varname, documentid);
										}
									}
								});
							});
						}
						/*else{
						br_utils.loadLock();
						alert("No commerce attribute found!!!");
						}	*/
					});
				}
			});

			jQuery(".line-item-grid-body tr:nth-child(1) [id*='attr_wrapper']", doc).each(function () {
				var attrwrapper = jQuery(this);
				var docvarname = jQuery(this).attr('id').substring(13);
				var idx = docvarname.indexOf('_');
				var varname = docvarname.substring(idx + 1);
				/*quote level line item grid attributes*/
				var documentid = attrwrapper.closest("tr").attr('documentid');
				var lineidx = attrwrapper.index() + 1;
				var lastidx = varname.lastIndexOf('_') - 1;
				var linevarname = varname.substring(0, lastidx + 1);
				var str = "<a id='link" + linevarname + "' class='br_tiny' style='cursor: pointer;'><img src='resource://br_images/admin.png'/></a>";
				var appendedstr = jQuery(".line-item-grid-header tr th:nth-child(" + lineidx + ")", doc);
				appendlink(appendedstr, linevarname, str, {"position":"absolute"});
				jQuery("#link" + linevarname, doc).click(function () {
					br_utils.loadLock();
					open_line_att_set_attribute(linevarname, documentid);
				});
			});
		}
		jQuery(".br_tiny", doc).css({
			color : 'red',
			display : 'none',
			'font-size' : '.8em',
			'margin' : '0px',
			'padding' : '0px',
			'line-height' : '0px'
		});
	};
	
	function quote_info(){
		var level = "";
		var message = "";
		var url = params['url']||"";
		var is_prod = br_utils.is_prod_site(url);
		if(is_prod){
			//message += "Don't Forget&#58; You're On PRODUCTION";
			level = "prod";
		}
		var transId = content.document.getElementsByName("id")[0];
		var stepName = content.document.getElementsByName("_step_varname")[0];
		var ppId = content.document.getElementsByName("pp_id")[0];
		var comProcessId = content.document.getElementsByName("bm_cm_process_id")[0];
		links = doc.getElementsByTagName("link");
		for(var m=0;m<links.length;m++){
			var linkHref = links[m].href;
			if(linkHref.indexOf("commerce/style")>-1){
				var procVarStart = linkHref.indexOf("style/") + 6;
				var procVarEnd = linkHref.indexOf(".css");
				var comProcessVar = linkHref.substring(procVarStart, procVarEnd);
			}
		}
		if(transId && stepName && ppId && comProcessId){
			if(message != ""){ message += "<br/>";}
			message += "Transaction ID&#58; <input id='sangfroid_trans_id' value='" + transId.value + "'/><br/>Step Name&#58; " + stepName.value + "<br/>Participant Profile&#58; " + ppId.value + "<br/>Commerce Process Id&#58; " + comProcessId.value + " " + comProcessVar, "code","transaction-info";
		}
		br_log.page(message,level);
	}
	this.after_page_load = function(){
		this.initiate_display();
		this.load_enhancements();
	};
	this.load_enhancements = function(){
		setTimeout(function(){
			quote_info();
			if (jQuery(".br_tiny", doc).length > 1) {
				return;
			}
			add_action_links();
		},100);
	};
	this.get_menu = function () {
		var me = this;
		//this.auto_sync(me);

		var m = br_menu(me.doc, me)
			.add_separator("br_tools", "Tools")
			.add_button_with_icon("br_refresh", "Reload Enhancements", "Reload",
				"chrome://sangfroid/content/img/ajax-loader.png", function () {
				me.load_enhancements();
			});

		return m;
	};
	//this.save_script_to_disk = function() {  };
	//this.open_script_in_editor = function() {  };
}
line_document.prototype = new BR_Content();